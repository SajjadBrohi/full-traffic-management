package tms.congestion;

import tms.sensors.Sensor;
import java.util.List;

/**
 * An implementation of a congestion calculator that calculates the average
 * congestion value from all of its sensors.
 */
public class AveragingCongestionCalculator implements CongestionCalculator {
    // List of Sensors to calculate AverageCongestion on
    private List<Sensor> sensors;

    /**
     * Constructor - Creates a new averaging congestion calculator for a given
     * list of sensors on a route.
     *
     * @param sensors list of sensors to use in congestion calculation
     */
    public AveragingCongestionCalculator(List<Sensor> sensors) {
        this.sensors = sensors;
    }

    /**
     * Calculates the average congestion level of all the sensors
     * stored by this calculator.
     *
     * @return the average congestion
     */
    public int calculateCongestion() {
        if (sensors.isEmpty()) {
            return 0;
        }

        int congestionSum = 0;
        for (Sensor sensor : sensors) {
            congestionSum += sensor.getCongestion();
        }
        float averageCongestion = (float) congestionSum / sensors.size();
        return Math.round(averageCongestion);
    }
}
